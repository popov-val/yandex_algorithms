"""

Есть два ступенчатых графика некоторых наблюдаемых величин, 
заданных отсортированными списками координат начала ступенек (<время измерения>, <значение>). 
Подразумевается, что величина сохраняет своё значение между измерениями. До первого измерения величина равна нулю.
Требуется построить новый график, который будет являться суммой двух представленных. 
Т.е. построить график, на котором для каждой точки (измерения) из первого и второго графика есть соответствующая точка.
Напишите функцию, которая по двум заданным массивам измерений вернёт сумму двух представленных массивов.

struct Point (
    int time;
    int value;
);

std::vector<Point> sum_series(const std::vector<Point>& a, const std::vector<Point>& b)

sum_series(a=[(1, 2), (5, 1)], b=[(2, 4), (3, 6), (9, 7)]) -> [(1, 2), (2, 6), (3, 8), (5, 7), (9, 8)]
"""

if __name__ == '__main__':
    a = [(1, 2), (5, 1)]
    b = [(2, 4), (3, 6), (9, 7)]
    a_i = 0
    b_i = 0
    res = []
    prev_a = (0, 0)
    # prev_b = (0, 0) /
    while a_i < len(a) and b_i < len(b):
        if a[a_i][0] < b[b_i][0]:
            res.append((a[a_i][0], prev_a[1] + a[a_i][1]))
            prev_a = a[a_i]
            a_i += 1
        else:
            res.append((b[b_i][0], prev_a[1] + b[b_i][1]))
            prev_a = b[b_i]
            b_i += 1

    while a_i < len(a):
        res.append((a[a_i][0], prev_b[1] + a[a_i][1]))
        a_i += 1

    while b_i < len(b):
        res.append((b[b_i][0], prev_a[1] + b[b_i][1]))
        b_i += 1

    print(res)
